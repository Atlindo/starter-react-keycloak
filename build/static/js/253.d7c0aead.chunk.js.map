{"version":3,"file":"static/js/253.d7c0aead.chunk.js","mappings":"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","sources":["components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/shared-components/Flex/index.js","configs/NavigationConfig.js","utils/index.js","components/util-components/Icon/index.js","components/util-components/IntlMessage/index.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { GRAY_SCALE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport { baseTheme, rgba } from 'configs/ThemeConfig';\r\n\r\nconst isDark = mode => {\r\n  return mode === 'dark';\r\n};\r\n\r\nconst NavItem = styled('div')`\r\n  display: flex;\r\n  align-items: center;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  padding: 0 1rem;\r\n  color: ${props => (isDark(props.mode) ? GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85))};\r\n\r\n  @media ${MEDIA_QUERIES.MOBILE} {\r\n    padding: 0 0.75rem;\r\n  }\r\n\r\n  .ant-badge {\r\n    color: ${props => (isDark(props.mode) ? GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85))};\r\n  }\r\n\r\n  .nav-icon {\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  &:hover,\r\n  &.ant-dropdown-open,\r\n  &.ant-popover-open {\r\n    > * {\r\n      color: ${props => (isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE)};\r\n    }\r\n\r\n    .profile-text {\r\n      color: ${props => (isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE)};\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavItem;\r\n","import React from 'react';\r\nimport { Dropdown, Avatar } from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  EditOutlined,\r\n  SettingOutlined,\r\n  ShopOutlined,\r\n  QuestionCircleOutlined,\r\n  LogoutOutlined,\r\n  LockOutlined,\r\n  DeleteOutlined,\r\n  ProfileOutlined,\r\n  UserOutlined,\r\n  DesktopOutlined,\r\n} from '@ant-design/icons';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport styled from '@emotion/styled';\r\nimport { FONT_WEIGHT, MEDIA_QUERIES, SPACER, FONT_SIZES } from 'constants/ThemeConstant';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\nimport {useLocation, useNavigate} from 'react-router-dom';\r\nimport NavItem from './NavItem';\r\nimport { AUTH_ACC_TOKEN } from '../../constants/AuthConstant';\r\nimport {APP_PREFIX_PATH} from '../../configs/AppConfig';\r\n\r\nconst Icon = styled.div(() => ({\r\n  fontSize: FONT_SIZES.LG,\r\n}));\r\n\r\nconst Profile = styled.div(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst UserInfo = styled('div')`\r\n  padding-left: ${SPACER[2]};\r\n\r\n  @media ${MEDIA_QUERIES.MOBILE} {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Name = styled.div(() => ({\r\n  fontWeight: FONT_WEIGHT.SEMIBOLD,\r\n}));\r\n\r\nconst Title = styled.span(() => ({\r\n  opacity: 0.8,\r\n}));\r\n\r\nconst MenuItemSignOut = props => {\r\n  const { keycloak } = useKeycloak();\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSignOut = () => {\r\n    console.log([window.location.origin, location.pathname].join(''), 'window.location.origin');\r\n    dispatch(signOut());\r\n    keycloak\r\n      .logout({\r\n        logoutMethod: 'GET',\r\n        redirectUri: [window.location.origin, location.pathname].join(''),\r\n      })\r\n      .then(response => {\r\n        localStorage.removeItem(AUTH_ACC_TOKEN);\r\n        console.log({ response });\r\n      })\r\n      .catch(err => {\r\n        console.log({ err });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div onClick={handleSignOut}>\r\n      <Flex alignItems=\"center\" gap={SPACER[2]}>\r\n        <Icon>\r\n          <LogoutOutlined />\r\n        </Icon>\r\n        <span>{props.label}</span>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n/**\r\n * @param {object} props\r\n * @param {()=> void} props.onClick\r\n * @param {string} props.action\r\n * @return {JSX.Element}\r\n * @constructor\r\n */\r\nconst MenuItemGeneral = props => {\r\n  const { keycloak } = useKeycloak();\r\n  function _onHandle() {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if(props.hasOwnProperty('onClick')){\r\n      props.onClick();\r\n    }else{\r\n      keycloak.login({\r\n        action: props?.action ?? null,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={_onHandle}>\r\n      <Flex alignItems=\"center\" gap={SPACER[2]}>\r\n        <Icon>{props?.icon}</Icon>\r\n        <span>{props.label}</span>\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const NavProfile = ({ mode }) => {\r\n  const { keycloak, initialized } = useKeycloak();\r\n  const navigate = useNavigate();\r\n  const user = useSelector(({ auth })=> auth?.user);\r\n  const items = [\r\n    {\r\n      key: 'Update Profile',\r\n      label: <MenuItemGeneral icon={<UserOutlined />} action=\"UPDATE_PROFILE\" label=\"Edit Profile\" />,\r\n    },\r\n    {\r\n      key: 'Change Password',\r\n      label: <MenuItemGeneral icon={<LockOutlined />} action=\"UPDATE_PASSWORD\" label=\"Change Password\" />,\r\n    },\r\n    {\r\n      key: '',\r\n      label: (\r\n        <MenuItemGeneral\r\n          // eslint-disable-next-line func-names\r\n          onClick={function () {\r\n            navigate(`${APP_PREFIX_PATH}/devices`);\r\n          }}\r\n          icon={<DesktopOutlined />}\r\n          action={null}\r\n          label=\"Device\"\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      type: 'divider',\r\n    },\r\n    {\r\n      danger: true,\r\n      key: 'Sign Out',\r\n      label: <MenuItemSignOut label=\"Sign Out\" />,\r\n    },\r\n  ];\r\n\r\n  return initialized && keycloak?.authenticated && (\r\n    <Dropdown\r\n      placement=\"bottomRight\"\r\n      menu={{\r\n        items: items ? [...items] : [],\r\n      }}\r\n      trigger={['click']}\r\n    >\r\n      <NavItem mode={mode}>\r\n        <Profile>\r\n          <Avatar src=\"/img/avatars/thumb-1.jpg\" />\r\n          <UserInfo className=\"profile-text\">\r\n            <Name>{user?.name}</Name>\r\n            <Title>{user?.email}</Title>\r\n          </UserInfo>\r\n        </Profile>\r\n      </NavItem>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({ justifyContent, alignItems, flexDirection, gap, padding, margin }) => {\r\n  const baseStyle = {\r\n    display: 'flex',\r\n    justifyContent,\r\n    alignItems,\r\n    gap: typeof gap === 'number' ? `${gap}px` : gap,\r\n  };\r\n\r\n  if (flexDirection) {\r\n    baseStyle.flexDirection = flexDirection;\r\n  }\r\n\r\n  if (padding) {\r\n    baseStyle.padding = padding;\r\n  }\r\n\r\n  if (margin) {\r\n    baseStyle.margin = margin;\r\n  }\r\n\r\n  return { ...baseStyle };\r\n});\r\n\r\nexport default Flex;\r\n","import {\r\n  ApartmentOutlined,\r\n  ApiOutlined,\r\n  AuditOutlined,\r\n  ClusterOutlined,\r\n  DashboardOutlined,\r\n  DesktopOutlined,\r\n  FileProtectOutlined,\r\n  GlobalOutlined,\r\n  InfoCircleOutlined,\r\n  LockOutlined,\r\n  OrderedListOutlined,\r\n  SafetyCertificateOutlined,\r\n  SettingOutlined,\r\n  TeamOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig';\r\n\r\nconst dashBoardNavTree = [\r\n  {\r\n    key: 'dashboards',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.dashboard',\r\n    icon: DashboardOutlined,\r\n    breadcrumb: false,\r\n    submenu: [],\r\n  },\r\n  {\r\n    key: 'users',\r\n    path: `${APP_PREFIX_PATH}/`,\r\n    title: 'sidenav.dashboard.users',\r\n    breadcrumb: true,\r\n    isGroupTitle: true,\r\n    roles: ['admin', 'super'],\r\n    submenu: [\r\n      {\r\n        key: 'users.index',\r\n        path: `${APP_PREFIX_PATH}/users`,\r\n        title: 'sidenav.dashboard.users.default',\r\n        icon: TeamOutlined,\r\n        breadcrumb: true,\r\n        isGroupTitle: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'users.roles.index',\r\n        path: `${APP_PREFIX_PATH}/users/role`,\r\n        title: 'sidenav.dashboard.users.roles',\r\n        icon: TeamOutlined,\r\n        breadcrumb: false,\r\n        isGroupTitle: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'users.group.index',\r\n        path: `${APP_PREFIX_PATH}/users/group`,\r\n        title: 'sidenav.dashboard.users.group',\r\n        icon: TeamOutlined,\r\n        breadcrumb: false,\r\n        isGroupTitle: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'keycloak',\r\n    path: `${APP_PREFIX_PATH}/keycloak`,\r\n    title: 'sidenav.dashboard.keycloak',\r\n    breadcrumb: false,\r\n    isGroupTitle: true,\r\n    roles: ['admin', 'super'],\r\n    submenu: [\r\n      {\r\n        roles: ['admin'],\r\n        key: 'keycloak.client',\r\n        path: `${APP_PREFIX_PATH}/keycloak/clients`,\r\n        title: 'sidenav.dashboard.keycloak.client',\r\n        icon: ClusterOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        roles: ['admin'],\r\n        key: 'keycloak.groups',\r\n        path: `${APP_PREFIX_PATH}/keycloak/groups`,\r\n        title: 'sidenav.dashboard.keycloak.groups',\r\n        icon: TeamOutlined,\r\n        breadcrumb: true,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'keycloak.realms',\r\n        path: `${APP_PREFIX_PATH}/keycloak/realm`,\r\n        title: 'sidenav.dashboard.keycloak.realm',\r\n        icon: GlobalOutlined,\r\n        breadcrumb: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'keycloak.general',\r\n        path: `${APP_PREFIX_PATH}/keycloak/general`,\r\n        title: 'sidenav.dashboard.keycloak.general',\r\n        icon: GlobalOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'keycloak.general.general-information',\r\n            path: `${APP_PREFIX_PATH}/keycloak/general/general-information`,\r\n            title: 'sidenav.dashboard.keycloak.general.general-information',\r\n            icon: InfoCircleOutlined,\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'keycloak.general.identify-provider',\r\n            path: `${APP_PREFIX_PATH}/keycloak/general/identify-provider`,\r\n            title: 'sidenav.dashboard.keycloak.general.identify-provider',\r\n            icon: GlobalOutlined,\r\n            breadcrumb: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    key: 'settings',\r\n    path: `${APP_PREFIX_PATH}/settings`,\r\n    title: 'sidenav.dashboard.setting',\r\n    breadcrumb: false,\r\n    isGroupTitle: true,\r\n    submenu: [\r\n      {\r\n        key: 'settings.index',\r\n        path: `${APP_PREFIX_PATH}/settings`,\r\n        title: 'sidenav.dashboard.setting.index',\r\n        icon: SettingOutlined,\r\n        breadcrumb: false,\r\n        isGroupTitle: false,\r\n        submenu: [],\r\n      },\r\n      {\r\n        key: 'settings.account',\r\n        path: `${APP_PREFIX_PATH}/settings/account`,\r\n        title: 'sidenav.dashboard.setting.account',\r\n        icon: UserOutlined,\r\n        breadcrumb: false,\r\n        submenu: [\r\n          {\r\n            key: 'settings.account.change-password',\r\n            path: `${APP_PREFIX_PATH}/settings/account`,\r\n            title: 'sidenav.dashboard.setting.account.change-password',\r\n            icon: LockOutlined,\r\n            breadcrumb: false,\r\n            isGroupTitle: false,\r\n            submenu: [],\r\n          },\r\n          {\r\n            key: 'settings.account.edit-profile',\r\n            path: `${APP_PREFIX_PATH}/settings/account/edit-profile`,\r\n            title: 'sidenav.dashboard.setting.account.edit-profile',\r\n            icon: UserOutlined,\r\n            breadcrumb: false,\r\n            isGroupTitle: false,\r\n            submenu: [],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        key: 'settings.devices',\r\n        path: `${APP_PREFIX_PATH}/devices`,\r\n        title: 'sidenav.dashboard.setting.devices',\r\n        icon: DesktopOutlined,\r\n        breadcrumb: false,\r\n        isGroupTitle: false,\r\n        submenu: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst navigationConfig = [...dashBoardNavTree];\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n  /**\r\n   * Get first character from first & last sentences of a username\r\n   * @param {String} name - Username\r\n   * @return {String} 2 characters string\r\n   */\r\n  static getNameInitial(name) {\r\n    const initials = name.match(/\\b\\w/g) || [];\r\n    return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Get current path related object from Navigation Tree\r\n   * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n   * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n   * @return {Object} object that contained the path string\r\n   */\r\n  static getRouteInfo(navTree, path) {\r\n    if (navTree.path === path) {\r\n      return navTree;\r\n    }\r\n    let route;\r\n    for (const p in navTree) {\r\n      if (navTree.hasOwnProperty(p) && typeof navTree[p] === 'object') {\r\n        route = this.getRouteInfo(navTree[p], path);\r\n        if (route) {\r\n          return route;\r\n        }\r\n      }\r\n    }\r\n    return route;\r\n  }\r\n\r\n  /**\r\n   * Get accessible color contrast\r\n   * @param {String} hex - Hex color code e.g '#3e82f7'\r\n   * @return {String} 'dark' or 'light'\r\n   */\r\n  static getColorContrast(hex) {\r\n    if (!hex) {\r\n      return 'dark';\r\n    }\r\n    const threshold = 130;\r\n    const hRed = hexToR(hex);\r\n    const hGreen = hexToG(hex);\r\n    const hBlue = hexToB(hex);\r\n    function hexToR(h) {\r\n      return parseInt(cutHex(h).substring(0, 2), 16);\r\n    }\r\n    function hexToG(h) {\r\n      return parseInt(cutHex(h).substring(2, 4), 16);\r\n    }\r\n    function hexToB(h) {\r\n      return parseInt(cutHex(h).substring(4, 6), 16);\r\n    }\r\n    function cutHex(h) {\r\n      return h.charAt(0) === '#' ? h.substring(1, 7) : h;\r\n    }\r\n    const cBrightness = (hRed * 299 + hGreen * 587 + hBlue * 114) / 1000;\r\n    if (cBrightness > threshold) {\r\n      return 'dark';\r\n    }\r\n    return 'light';\r\n  }\r\n\r\n  /**\r\n   * Darken or lighten a hex color\r\n   * @param {String} color - Hex color code e.g '#3e82f7'\r\n   * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n   * @return {String} Darken or lighten color\r\n   */\r\n  static shadeColor(color, percent) {\r\n    let R = parseInt(color.substring(1, 3), 16);\r\n    let G = parseInt(color.substring(3, 5), 16);\r\n    let B = parseInt(color.substring(5, 7), 16);\r\n    R = parseInt((R * (100 + percent)) / 100);\r\n    G = parseInt((G * (100 + percent)) / 100);\r\n    B = parseInt((B * (100 + percent)) / 100);\r\n    R = R < 255 ? R : 255;\r\n    G = G < 255 ? G : 255;\r\n    B = B < 255 ? B : 255;\r\n    const RR = R.toString(16).length === 1 ? `0${R.toString(16)}` : R.toString(16);\r\n    const GG = G.toString(16).length === 1 ? `0${G.toString(16)}` : G.toString(16);\r\n    const BB = B.toString(16).length === 1 ? `0${B.toString(16)}` : B.toString(16);\r\n    return `#${RR}${GG}${BB}`;\r\n  }\r\n\r\n  /**\r\n   * Convert RGBA to HEX\r\n   * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n   * @return {String} HEX color\r\n   */\r\n  static rgbaToHex(rgba) {\r\n    const trim = str => str.replace(/^\\s+|\\s+$/gm, '');\r\n    const inParts = rgba.substring(rgba.indexOf('(')).split(',');\r\n    const r = parseInt(trim(inParts[0].substring(1)), 10);\r\n    const g = parseInt(trim(inParts[1]), 10);\r\n    const b = parseInt(trim(inParts[2]), 10);\r\n    const a = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n    const outParts = [\r\n      r.toString(16),\r\n      g.toString(16),\r\n      b.toString(16),\r\n      Math.round(a * 255)\r\n        .toString(16)\r\n        .substring(0, 2),\r\n    ];\r\n\r\n    outParts.forEach(function (part, i) {\r\n      if (part.length === 1) {\r\n        outParts[i] = `0${part}`;\r\n      }\r\n    });\r\n    return `#${outParts.join('')}`;\r\n  }\r\n\r\n  /**\r\n   * Returns either a positive or negative\r\n   * @param {Number} number - number value\r\n   * @param {any} positive - value that return when positive\r\n   * @param {any} negative - value that return when negative\r\n   * @return {any} positive or negative value based on param\r\n   */\r\n  static getSignNum(number, positive, negative) {\r\n    if (number > 0) {\r\n      return positive;\r\n    }\r\n    if (number < 0) {\r\n      return negative;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns either ascending or descending value\r\n   * @param {Object} a - antd Table sorter param a\r\n   * @param {Object} b - antd Table sorter param b\r\n   * @param {String} key - object key for compare\r\n   * @return {any} a value minus b value\r\n   */\r\n  // eslint-disable-next-line consistent-return\r\n  static antdTableSorter(a, b, key) {\r\n    if (typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n      return a[key] - b[key];\r\n    }\r\n\r\n    if (typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n      a = a[key].toLowerCase();\r\n      b = b[key].toLowerCase();\r\n      return a > b ? -1 : b > a ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filter array of object\r\n   * @param {Array} list - array of objects that need to filter\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - value that excluded from filter\r\n   * @return {Array} a value minus b value\r\n   */\r\n  static filterArray(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter(item => item[key] === value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Remove object from array by value\r\n   * @param {Array} list - array of objects\r\n   * @param {String} key - object key target\r\n   * @param {any} value  - target value\r\n   * @return {Array} Array that removed target object\r\n   */\r\n  static deleteArrayRow(list, key, value) {\r\n    let data = list;\r\n    if (list) {\r\n      data = list.filter(item => item[key] !== value);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Wild card search on all property of the object\r\n   * @param {Number | String} input - any value to search\r\n   * @param {Array} list - array for search\r\n   * @return {Array} array of object contained keyword\r\n   */\r\n  static wildCardSearch(list, input) {\r\n    const searchText = item => {\r\n      for (const key in item) {\r\n        if (item[key] == null) {\r\n          continue;\r\n        }\r\n        if (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n          return true;\r\n        }\r\n      }\r\n    };\r\n    list = list.filter(value => searchText(value));\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get Breakpoint\r\n   * @param {Object} screens - Grid.useBreakpoint() from antd\r\n   * @return {Array} array of breakpoint size\r\n   */\r\n  static getBreakPoint(screens) {\r\n    const breakpoints = [];\r\n    for (const key in screens) {\r\n      if (screens.hasOwnProperty(key)) {\r\n        const element = screens[key];\r\n        if (element) {\r\n          breakpoints.push(key);\r\n        }\r\n      }\r\n    }\r\n    return breakpoints;\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Icon extends Component {\r\n  render() {\r\n    const { type, className } = this.props;\r\n    return <>{React.createElement(type, { className })}</>;\r\n  }\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const translate = t(id, fallback);\r\n\r\n  return <>{translate}</>;\r\n};\r\n\r\nexport default IntlMessage;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { first } from 'lodash';\r\nimport { useKeycloak } from '@react-keycloak/web';\r\nimport Icon from '../util-components/Icon';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = key => {\r\n  const keyList = [];\r\n  let keyString = '';\r\n  if (key) {\r\n    const arr = key.split('-');\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst MenuItem = ({ title, icon, path }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n  const closeMobileNav = () => {\r\n    if (isMobile) {\r\n      dispatch(onMobileNavToggle(false));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {icon && <Icon type={icon} />}\r\n      <span>{setLocale(title)}</span>\r\n      {path && <Link onClick={closeMobileNav} to={path} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst getSideNavMenuItem = navItem =>\r\n  navItem.map(nav => {\r\n    return {\r\n      key: nav.key,\r\n      label: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : { path: nav.path, icon: nav.icon })} />,\r\n      ...(nav.isGroupTitle ? { type: 'group' } : {}),\r\n      ...(nav.submenu.length > 0 ? { children: getSideNavMenuItem(nav.submenu) } : {}),\r\n    };\r\n  });\r\n\r\nconst getTopNavMenuItem = navItem =>\r\n  navItem.map(nav => {\r\n    return {\r\n      key: nav.key,\r\n      label: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : { path: nav.path })} />,\r\n      ...(nav.submenu.length > 0 ? { children: getTopNavMenuItem(nav.submenu) } : {}),\r\n    };\r\n  });\r\n\r\nconst SideNavContent = props => {\r\n  const { keycloak } = useKeycloak();\r\n  const { routeInfo, hideGroupTitle, sideNavTheme = SIDE_NAV_LIGHT } = props;\r\n\r\n  const menuItems = useMemo(\r\n    () =>\r\n      getSideNavMenuItem(\r\n        navigationConfig.filter(child =>\r\n          typeof child?.roles === 'undefined'\r\n            ? true\r\n            : Array.isArray(child.roles) && child.roles.length > 0\r\n              ? child.roles.some(item => keycloak.hasResourceRole(item) || keycloak.hasRealmRole(item))\r\n              : true\r\n        )\r\n      ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <Menu\r\n      mode=\"inline\"\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? 'light' : 'dark'}\r\n      style={{ height: '100%', borderInlineEnd: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? 'hide-group-title' : ''}\r\n      items={menuItems}\r\n    />\r\n  );\r\n};\r\n\r\nconst TopNavContent = () => {\r\n  const topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n  const menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), []);\r\n\r\n  return <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }} items={menuItems} />;\r\n};\r\n\r\nconst MenuContent = props => {\r\n  return props.type === NAV_TYPE_SIDE ? <SideNavContent {...props} /> : <TopNavContent {...props} />;\r\n};\r\n\r\nexport default MenuContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Layout } from 'antd';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE, TEMPLATE, GRAY_SCALE, DARK_MODE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { css } from '@emotion/react';\r\nimport MenuContent from './MenuContent';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({ navCollapsed, routeInfo, hideGroupTitle, currentTheme }) => {\r\n  const sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle };\r\n  return (\r\n    <Sider\r\n      css={css`\r\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px);\r\n        position: fixed !important;\r\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n        box-shadow: 0 1px 4px -1px rgba(0, 0, 0, 0.15);\r\n        z-index: 999;\r\n        direction: ltr;\r\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK\r\n          ? `background-color: ${GRAY_SCALE.WHITE} !important;`\r\n          : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\r\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK\r\n          ? `background-color: ${DARK_MODE.BG_COLOR} !important`\r\n          : ''}\r\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK\r\n          ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`\r\n          : ''}\r\n      `}\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK ? 'side-nav-dark' : ''}`}\r\n      width={SIDE_NAV_WIDTH}\r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n      </Scrollbars>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, currentTheme } = theme;\r\n  return { navCollapsed, sideNavTheme, currentTheme };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP, TEMPLATE, WHITE, GRAY } from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport styled from '@emotion/styled';\r\nimport MenuContent from './MenuContent';\r\n\r\nconst TopNvContent = styled('div')`\r\n  height: ${TEMPLATE.HEADER_HEIGHT}px;\r\n  background-color: ${props => (props.backgroundColor ? props.backgroundColor : '#001529')};\r\n  position: fixed;\r\n  top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n  width: 100%;\r\n  z-index: @zindex-modal;\r\n  box-shadow: 0 0.75rem 1.5rem rgba(18, 38, 63, 0.03);\r\n\r\n  .top-nav-wrapper {\r\n    max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n\r\n    .ant-menu-horizontal {\r\n      line-height: ${TEMPLATE.HEADER_HEIGHT}px;\r\n      border-bottom: 0;\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.mode === 'light'\r\n      ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${WHITE};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(255, 255, 255, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    `\r\n      : ''}\r\n\r\n  ${props =>\r\n    props.mode === 'dark'\r\n      ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${GRAY};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(0, 0, 0, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    `\r\n      : ''}\r\n`;\r\n\r\nexport const TopNav = ({ topNavColor }) => {\r\n  const props = { topNavColor };\r\n  return (\r\n    <TopNvContent mode={utils.getColorContrast(topNavColor)} backgroundColor={topNavColor}>\r\n      <div className=\"top-nav-wrapper\">\r\n        <MenuContent type={NAV_TYPE_TOP} {...props} />\r\n      </div>\r\n    </TopNvContent>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } = theme;\r\n  return { topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP, TEMPLATE } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\nimport styled from '@emotion/styled';\r\n\r\nconst LogoWrapper = styled.div(() => ({\r\n  height: TEMPLATE.HEADER_HEIGHT,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: '0 1rem',\r\n  backgroundColor: 'transparent',\r\n  transition: 'all .2s ease',\r\n}));\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n  const navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n  const navType = useSelector(state => state.theme.navType);\r\n\r\n  const getLogoWidthGutter = () => {\r\n    const isNavTop = navType === NAV_TYPE_TOP;\r\n    if (isMobile && !mobileLogo) {\r\n      return 0;\r\n    }\r\n    if (isNavTop) {\r\n      return 'auto';\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    }\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  };\r\n\r\n  const getLogo = () => {\r\n    if (logoType === 'light') {\r\n      if (navCollapsed) {\r\n        return '/img/logo-sm-white.png';\r\n      }\r\n      return '/img/logo-white.png';\r\n    }\r\n\r\n    if (navCollapsed) {\r\n      return '/img/logo-sm.png';\r\n    }\r\n    return '/img/logo.png';\r\n  };\r\n\r\n  return (\r\n    <LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{ width: `${getLogoWidthGutter()}` }}>\r\n      <img src={getLogo()} alt={`${APP_NAME} logo`} />\r\n    </LogoWrapper>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { Drawer } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { ArrowLeftOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport MenuContent from './MenuContent';\r\n\r\nexport const MobileNav = ({ routeInfo, hideGroupTitle }) => {\r\n  const dispatch = useDispatch();\r\n  const currentTheme = useSelector(state => state.theme.currentTheme);\r\n  const mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n  const menuContentprops = { routeInfo, hideGroupTitle };\r\n\r\n  const onClose = () => {\r\n    dispatch(onMobileNavToggle(false));\r\n  };\r\n\r\n  return (\r\n    <Drawer placement=\"left\" closable={false} onClose={onClose} open={mobileNav} bodyStyle={{ padding: 5 }} width={300}>\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Logo logoType={currentTheme === 'dark' ? 'light' : 'dark'} mobileLogo />\r\n          <div className=\"px-3\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"h-100\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default MobileNav;\r\n","import styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst Header = styled.div(({ headerNavColor, isDarkTheme }) => ({\r\n  position: 'fixed',\r\n  width: '100%',\r\n  left: 0,\r\n  zIndex: 1000,\r\n  display: 'flex',\r\n  flex: '0 0 auto',\r\n  height: TEMPLATE.HEADER_HEIGHT,\r\n  lineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\r\n  backgroundColor: headerNavColor,\r\n  boxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)',\r\n}));\r\n\r\nexport default Header;\r\n","import styled from '@emotion/styled';\r\n\r\nconst HeaderWrapper = styled.div(({ isNavTop }) => ({\r\n  width: '100%',\r\n  display: 'flex',\r\n  ...(isNavTop ? { maxWidth: isNavTop, margin: 'auto' } : {}),\r\n}));\r\n\r\nexport default HeaderWrapper;\r\n","import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.div(({ navWidth }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  position: 'relative',\r\n  transition: 'all .2s ease',\r\n  width: `calc(100% - ${navWidth})`,\r\n}));\r\n\r\nexport default Nav;\r\n","import styled from '@emotion/styled';\r\n\r\nconst NavEdge = styled.div(({ left, right }) => {\r\n  if (left) {\r\n    return {\r\n      display: 'flex',\r\n    };\r\n  }\r\n\r\n  if (right) {\r\n    return {\r\n      marginLeft: 'auto',\r\n      padding: '0 1rem',\r\n      display: 'flex',\r\n    };\r\n  }\r\n\r\n  return {};\r\n});\r\n\r\nexport default NavEdge;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEMPLATE, NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport utils from 'utils';\r\nimport Logo from '../Logo';\r\nimport NavProfile from '../NavProfile';\r\nimport Header from './Header';\r\nimport HeaderWrapper from './HeaderWrapper';\r\nimport Nav from './Nav';\r\nimport NavEdge from './NavEdge';\r\nimport NavItem from '../NavItem';\r\n\r\nexport const HeaderNav = props => {\r\n  const { isMobile } = props;\r\n\r\n  const [searchActive, setSearchActive] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n  const mobileNav = useSelector(state => state.theme.mobileNav);\r\n  const navType = useSelector(state => state.theme.navType);\r\n  const headerNavColor = useSelector(state => state.theme.headerNavColor);\r\n  const currentTheme = useSelector(state => state.theme.currentTheme);\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false);\r\n  };\r\n\r\n  const onToggle = () => {\r\n    if (!isMobile) {\r\n      dispatch(toggleCollapsedNav(!navCollapsed));\r\n    } else {\r\n      dispatch(onMobileNavToggle(!mobileNav));\r\n    }\r\n  };\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP;\r\n  const isDarkTheme = currentTheme === 'dark';\r\n\r\n  const navMode = useMemo(() => {\r\n    if (!headerNavColor) {\r\n      return utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff');\r\n    }\r\n    return utils.getColorContrast(headerNavColor);\r\n  }, [isDarkTheme, headerNavColor]);\r\n\r\n  const navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n  const getNavWidth = () => {\r\n    if (isNavTop || isMobile) {\r\n      return '0px';\r\n    }\r\n    if (navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n    }\r\n    return `${SIDE_NAV_WIDTH}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isMobile) {\r\n      onSearchClose();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\r\n      <HeaderWrapper isNavTop={isNavTop}>\r\n        <Logo logoType={navMode} />\r\n        <Nav navWidth={getNavWidth()}>\r\n          <NavEdge left>\r\n            {isNavTop && !isMobile ? null : (\r\n              <NavItem onClick={onToggle} mode={navMode}>\r\n                <div className=\"d-flex align-items-center\">\r\n                  {navCollapsed || isMobile ? (\r\n                    <MenuUnfoldOutlined className=\"nav-icon\" />\r\n                  ) : (\r\n                    <MenuFoldOutlined className=\"nav-icon\" />\r\n                  )}\r\n                </div>\r\n              </NavItem>\r\n            )}\r\n          </NavEdge>\r\n          <NavEdge right>\r\n            <NavProfile mode={navMode} />\r\n          </NavEdge>\r\n        </Nav>\r\n      </HeaderWrapper>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nconst breadcrumbData = {\r\n  '/app': <IntlMessage id=\"home\" />,\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n  const assignBreadcrumb = obj => (breadcrumbData[obj.path] = <IntlMessage id={obj.title} />);\r\n  assignBreadcrumb(elm);\r\n  if (elm.submenu) {\r\n    elm.submenu.forEach(elm => {\r\n      assignBreadcrumb(elm);\r\n      if (elm.submenu) {\r\n        elm.submenu.forEach(elm => {\r\n          assignBreadcrumb(elm);\r\n        });\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\nconst BreadcrumbRoute = props => {\r\n  const location = useLocation();\r\n  const pathSnippets = location.pathname.split('/').filter(i => i);\r\n  const breadcrumbItems = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return {\r\n      title: <Link to={url}>{breadcrumbData[url]}</Link>,\r\n    };\r\n  });\r\n\r\n  return <Breadcrumb items={breadcrumbItems} />;\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n  render() {\r\n    return <BreadcrumbRoute />;\r\n  }\r\n}\r\n\r\nexport default AppBreadcrumb;\r\n","/** @jsxImportSource @emotion/react */\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport { css } from '@emotion/react';\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n  return display ? (\r\n    <div\r\n      css={css`\r\n        align-items: center;\r\n        margin-bottom: 1rem;\r\n\r\n        @media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\r\n          display: flex;\r\n        }\r\n      `}\r\n    >\r\n      <h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n        <IntlMessage id={title || 'home'} />\r\n      </h3>\r\n      <AppBreadcrumb />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default PageHeader;\r\n","/** @jsxImportSource @emotion/react */\r\nimport React from 'react';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from 'constants/ThemeConstant';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Footer() {\r\n  const currentTheme = useSelector(state => state.theme.currentTheme);\r\n\r\n  return (\r\n    <footer\r\n      css={css`\r\n        height: ${TEMPLATE.FOOTER_HEIGHT}px;\r\n        display: flex;\r\n        margin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n        align-items: center;\r\n        border-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR};\r\n        justify-content: space-between;\r\n\r\n        @media ${MEDIA_QUERIES.MOBILE} {\r\n          justify-content: center;\r\n          flex-direction: column;\r\n        }\r\n      `}\r\n    >\r\n      <span>\r\n        Copyright &copy; {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span>{' '}\r\n        All rights reserved.\r\n      </span>\r\n      <div>\r\n        <a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>\r\n          Term & Conditions\r\n        </a>\r\n        <span className=\"mx-2 text-muted\"> | </span>\r\n        <a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>\r\n          Privacy & Policy\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav';\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid } from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n  padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n  margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n  min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n  position: relative;\r\n\r\n  ${props =>\r\n    props.isNavTop\r\n      ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    `\r\n      : ''}\r\n\r\n  @media ${MEDIA_QUERIES.MOBILE} {\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n  }\r\n`;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n  const location = useLocation();\r\n\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname);\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = screens.length === 0 ? false : !screens.includes('lg');\r\n  const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE;\r\n  const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP;\r\n\r\n  const getLayoutGutter = () => {\r\n    if (isNavTop || isMobile) {\r\n      return 0;\r\n    }\r\n    return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH;\r\n  };\r\n\r\n  const getLayoutDirectionGutter = () => {\r\n    if (direction === TEMPLATE.DIR_LTR) {\r\n      return { paddingLeft: getLayoutGutter() };\r\n    }\r\n    if (direction === TEMPLATE.DIR_RTL) {\r\n      return { paddingRight: getLayoutGutter() };\r\n    }\r\n    return { paddingLeft: getLayoutGutter() };\r\n  };\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile} />\r\n      {isNavTop && !isMobile ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n      <Layout>\r\n        {isNavSide && !isMobile ? <SideNav routeInfo={currentRouteInfo} /> : null}\r\n        <Layout style={getLayoutDirectionGutter()}>\r\n          <AppContent isNavTop={isNavTop}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content className=\"h-100\">\r\n              <Suspense fallback={<Loading cover=\"content\" />}>{children}</Suspense>\r\n            </Content>\r\n          </AppContent>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav routeInfo={currentRouteInfo} />}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } = theme;\r\n  return { navCollapsed, navType, locale };\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));\r\n"],"names":["isDark","mode","NavItem","styled","props","GRAY_SCALE","rgba","MEDIA_QUERIES","baseTheme","Icon","fontSize","FONT_SIZES","Profile","display","alignItems","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","Title","opacity","MenuItemSignOut","keycloak","useKeycloak","location","useLocation","dispatch","useDispatch","onClick","console","log","window","origin","pathname","join","signOut","logout","logoutMethod","redirectUri","then","response","localStorage","removeItem","AUTH_ACC_TOKEN","catch","err","gap","label","MenuItemGeneral","hasOwnProperty","login","action","icon","initialized","navigate","useNavigate","user","useSelector","auth","items","key","APP_PREFIX_PATH","type","danger","authenticated","placement","menu","trigger","src","className","name","email","Flex","justifyContent","flexDirection","padding","margin","baseStyle","dashBoardNavTree","path","title","DashboardOutlined","breadcrumb","submenu","isGroupTitle","roles","TeamOutlined","ClusterOutlined","GlobalOutlined","InfoCircleOutlined","SettingOutlined","UserOutlined","LockOutlined","DesktopOutlined","Utils","initials","match","shift","pop","toUpperCase","navTree","route","p","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","number","positive","negative","toLowerCase","list","value","data","filter","item","input","searchText","screens","breakpoints","push","React","Component","id","fallback","translate","t","useTranslation","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","setDefaultOpen","keyList","keyString","arr","index","elm","MenuItem","isMobile","utils","getBreakPoint","includes","onMobileNavToggle","to","getSideNavMenuItem","navItem","map","nav","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","SIDE_NAV_LIGHT","menuItems","useMemo","navigationConfig","child","Array","isArray","some","hasResourceRole","hasRealmRole","theme","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","TopNavContent","topNavColor","state","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","SIDE_NAV_DARK","DARK_MODE","width","SIDE_NAV_WIDTH","collapsed","autoHide","TopNvContent","WHITE","GRAY","getColorContrast","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","alt","APP_NAME","mobileNav","menuContentprops","onClose","closable","open","bodyStyle","ArrowLeftOutlined","headerNavColor","isDarkTheme","position","left","zIndex","flex","lineHeight","boxShadow","maxWidth","navWidth","right","marginLeft","useState","setSearchActive","navMode","navBgColor","useEffect","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","NavProfile","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","pathSnippets","breadcrumbItems","_","url","slice","AppBreadcrumb","Footer","BORDER","Date","getFullYear","href","e","preventDefault","Content","AppContent","AppLayout","direction","currentRouteInfo","isNavSide","getLayoutGutter","paddingLeft","paddingRight","Suspense","Loading","cover","locale"],"sourceRoot":""}